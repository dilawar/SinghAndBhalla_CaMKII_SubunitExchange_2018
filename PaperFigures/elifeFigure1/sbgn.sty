\RequirePackage{xstring,xifthen}
\RequirePackage{listofitems}

\usetikzlibrary{positioning,fit}
\usetikzlibrary{backgrounds}
\usetikzlibrary{arrows,arrows.meta}
\usetikzlibrary{shapes,shapes.misc}

\tikzset{
    output/.style={-{Triangle[scale=1.2]},thick}
    , stimulus/.style={-{Triangle[scale=1.5,open]},thick}
    , required stimulus/.style={-{Bar[scale=1.4] _ Triangle[scale=1.5,open]},thick}
    , catalyst/.style={-{Circle[scale=1.5,open]},thick}
}

\edef\bkcl{yellow!20}
\setsepchar{,}

% Signal Biology Graphical Notation.

% --- Macro for attaching labels to any given node.
% --- The last options update the fitlist.
% --- 
\newcommand\ATTACHLABELS[3]{% csv labels, node, fitlist
    \edef\labelText{#1}
    \edef\nodeID{#2}
    \StrLen{\labelText}[\lenLabel]
    \ifthenelse{\lenLabel > 0}
    {
        \readlist\labels{\labelText}
        \def\i{0}
        \foreachitem \label \in \labels 
        {
            \tikzset{node distance=1mm}
            \pgfmathsetmacro{\i}{\labelcnt - 1}
            \edef\prevNodeName{\nodeID_label_\i}

            % labelcnt is the index given by \foreachitem
            \edef\labelNodeName{\nodeID_label_\labelcnt} 

            \edef\labelNodeNameDummy{\labelNodeName_dummy}
            \node[inner sep=0,circle,draw] (\labelNodeNameDummy) 
                [right=of \prevNodeName] {};

            \xdef\fitlist{\fitlist (\labelNodeNameDummy)}

            \node[draw,shape=ellipse,fill=white,inner sep=1pt] 
                (\labelNodeName) at (\labelNodeNameDummy) {\footnotesize \tt \label};
        }
    }{}
}


% Position is given by below=of, above=of using positioning library.

\newcommand\SimpleMol[3] { % name, position, text
    \node[draw,circle,rounded corners,fill=yellow!20] (#1) #2 {#3};
}

% This node creates a macro molecules. 
% This macro accepts following arguments.
% --- 1. Name of the node
% --- 2. Position of the node.
% --- 3. Text on the node.
% --- 4. List of labels separated by ,
%
% NOTES: The labels are attached below the box using ellipse.
\newcommand\MacroMol[4] { %name, position, text, labels

    \edef\height{1cm}
    \edef\width{2cm}

    \node[rectangle, minimum height=\height] (#1) #2 {#3};

    \node (#1_label_0) at (#1.south west) {};

    \def\fitlist{(#1)}
    \ATTACHLABELS{#4}{#1}{\fitlist}

    % Put the labels nodes and original node together; and draw a rectangle
    % around it.
    \begin{scope}[on background layer]
        \node[inner sep=0, rectangle, draw, rounded corners,fill=\bkcl, fit=\fitlist] (#1) {};
    \end{scope}
}

\newcommand\Process[3] { %name, position, text
    \node[draw,rectangle,blue,thick] (#1) #2 {};
}

% ProcessArrow between #2 and #3.
\newcommand\ProcessArrow[3]{ %name, from, to
    \Process{#1}{[at=($(#2)!0.5!(#3)$)]}{ }
    \draw (#2) -- (#1);
    \draw[output] (#1) -- (#3);
}

% Create a process arrow with given offset and shift.
\newcommand\ProcessArrowWithShift[4] { %name,from,to,shift
    \coordinate (substrateNode) at ([yshift=#4]#2);
    \coordinate (productNode) at ([yshift=#4]#3);
    % Add a node between the start and end point of arrow.
    \node (#1_midpoint) at ($(substrateNode)!0.5!(productNode)$) {};
    \ProcessArrow{#1}{substrateNode}{productNode}
}

% CONNECT two nodes.
\newcommand\Connect[4]{ % name, type, start_node, end_node 
    \draw[#2] (#3) -- node[inner sep=0pt,near start,circle] (#1) {} (#4);
}

% Make complex.
\newcommand\ComplexTwo[4]{ % name, molecule1, molecule2, optinal level
    \node[fit=(#2) (#3),draw,chamfered rectangle] (#1) {};
    \def\fitlist{ }
    \ATTACHLABELS{#4}{#1}{\fitlist}
}

% Macro for place.
\newcommand\Place[4]{ % name, where, fitlist, label 

    \node (#1) { };
    \node[rectangle,draw,fit=#3,label=-90:\small #1,fill=none,inner sep=5mm] (#1) #2 { };

    \def\fitlist{(#1)}
    \ATTACHLABELS{#4}{#1}{\fitlist}
}
